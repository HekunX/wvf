(function(u,p){typeof exports=="object"&&typeof module<"u"?p(exports):typeof define=="function"&&define.amd?define(["exports"],p):(u=typeof globalThis<"u"?globalThis:u||self,p(u.webview={}))})(this,function(u){"use strict";u.DotNet=void 0,function(o){const s=[],c="__jsObjectId",l="__dotNetObject",d="__byte[]",j="__dotNetStream",L="__jsStreamReferenceLength";let y,S;class k{constructor(e){this._jsObject=e,this._cachedFunctions=new Map}findFunction(e){const t=this._cachedFunctions.get(e);if(t)return t;let r=this._jsObject,i;if(e.split(".").forEach(a=>{if(a in r)i=r,r=r[a];else throw new Error(`Could not find '${e}' ('${a}' was undefined).`)}),r instanceof Function)return r=r.bind(i),this._cachedFunctions.set(e,r),r;throw new Error(`The value '${e}' is not a function.`)}getWrappedObject(){return this._jsObject}}const O=0,m={[O]:new k(window)};m[O]._cachedFunctions.set("import",n=>(typeof n=="string"&&n.startsWith("./")&&(n=new URL(n.substr(2),document.baseURI).toString()),import(n)));let J=1;function U(n){const e=new z(n);return y===void 0?y=e:y&&(y=null),e}o.attachDispatcher=U;function F(n){s.push(n)}o.attachReviver=F;function K(n,e,...t){return C().invokeDotNetStaticMethod(n,e,...t)}o.invokeMethod=K;function V(n,e,...t){return C().invokeDotNetStaticMethodAsync(n,e,...t)}o.invokeMethodAsync=V;function N(n){if(n&&typeof n=="object"){m[J]=new k(n);const e={[c]:J};return J++,e}throw new Error(`Cannot create a JSObjectReference from the value '${n}'.`)}o.createJSObjectReference=N;function B(n){let e=-1;if(n instanceof ArrayBuffer&&(n=new Uint8Array(n)),n instanceof Blob)e=n.size;else if(n.buffer instanceof ArrayBuffer){if(n.byteLength===void 0)throw new Error(`Cannot create a JSStreamReference from the value '${n}' as it doesn't have a byteLength.`);e=n.byteLength}else throw new Error("Supplied value is not a typed array or blob.");const t={[L]:e};try{const r=N(n);t[c]=r[c]}catch{throw new Error(`Cannot create a JSStreamReference from the value '${n}'.`)}return t}o.createJSStreamReference=B;function W(n){const e=n&&n[c];typeof e=="number"&&R(e)}o.disposeJSObjectReference=W;function g(n,e){S=n;const t=e?JSON.parse(e,(r,i)=>s.reduce((a,f)=>f(r,a),i)):null;return S=void 0,t}function C(){if(y===void 0)throw new Error("No call dispatcher has been set.");if(y===null)throw new Error("There are multiple .NET runtimes present, so a default dispatcher could not be resolved. Use DotNetObject to invoke .NET instance methods.");return y}let b;(function(n){n[n.Default=0]="Default",n[n.JSObjectReference=1]="JSObjectReference",n[n.JSStreamReference=2]="JSStreamReference",n[n.JSVoidResult=3]="JSVoidResult"})(b=o.JSCallResultType||(o.JSCallResultType={}));class z{constructor(e){this._dotNetCallDispatcher=e,this._byteArraysToBeRevived=new Map,this._pendingDotNetToJSStreams=new Map,this._pendingAsyncCalls={},this._nextAsyncCallId=1}getDotNetCallDispatcher(){return this._dotNetCallDispatcher}invokeJSFromDotNet(e,t,r,i){const a=g(this,t),h=_(e,i)(...a||[]),w=M(h,r);return w==null?null:v(this,w)}beginInvokeJSFromDotNet(e,t,r,i,a){const f=new Promise(h=>{const w=g(this,r),X=_(t,a)(...w||[]);h(X)});e&&f.then(h=>v(this,[e,!0,M(h,i)])).then(h=>this._dotNetCallDispatcher.endInvokeJSFromDotNet(e,!0,h),h=>this._dotNetCallDispatcher.endInvokeJSFromDotNet(e,!1,JSON.stringify([e,!1,q(h)])))}endInvokeDotNetFromJS(e,t,r){const i=t?g(this,r):new Error(r);this.completePendingCall(parseInt(e,10),t,i)}invokeDotNetStaticMethod(e,t,...r){return this.invokeDotNetMethod(e,t,null,r)}invokeDotNetStaticMethodAsync(e,t,...r){return this.invokeDotNetMethodAsync(e,t,null,r)}invokeDotNetMethod(e,t,r,i){if(this._dotNetCallDispatcher.invokeDotNetFromJS){const a=v(this,i),f=this._dotNetCallDispatcher.invokeDotNetFromJS(e,t,r,a);return f?g(this,f):null}throw new Error("The current dispatcher does not support synchronous calls from JS to .NET. Use invokeDotNetMethodAsync instead.")}invokeDotNetMethodAsync(e,t,r,i){if(e&&r)throw new Error(`For instance method calls, assemblyName should be null. Received '${e}'.`);const a=this._nextAsyncCallId++,f=new Promise((h,w)=>{this._pendingAsyncCalls[a]={resolve:h,reject:w}});try{const h=v(this,i);this._dotNetCallDispatcher.beginInvokeDotNetFromJS(a,e,t,r,h)}catch(h){this.completePendingCall(a,!1,h)}return f}receiveByteArray(e,t){this._byteArraysToBeRevived.set(e,t)}processByteArray(e){const t=this._byteArraysToBeRevived.get(e);return t?(this._byteArraysToBeRevived.delete(e),t):null}supplyDotNetStream(e,t){if(this._pendingDotNetToJSStreams.has(e)){const r=this._pendingDotNetToJSStreams.get(e);this._pendingDotNetToJSStreams.delete(e),r.resolve(t)}else{const r=new E;r.resolve(t),this._pendingDotNetToJSStreams.set(e,r)}}getDotNetStreamPromise(e){let t;if(this._pendingDotNetToJSStreams.has(e))t=this._pendingDotNetToJSStreams.get(e).streamPromise,this._pendingDotNetToJSStreams.delete(e);else{const r=new E;this._pendingDotNetToJSStreams.set(e,r),t=r.streamPromise}return t}completePendingCall(e,t,r){if(!this._pendingAsyncCalls.hasOwnProperty(e))throw new Error(`There is no pending async call with ID ${e}.`);const i=this._pendingAsyncCalls[e];delete this._pendingAsyncCalls[e],t?i.resolve(r):i.reject(r)}}function q(n){return n instanceof Error?`${n.message}
${n.stack}`:n?n.toString():"null"}function _(n,e){const t=m[e];if(t)return t.findFunction(n);throw new Error(`JS object instance with ID ${e} does not exist (has it been disposed?).`)}o.findJSFunction=_;function R(n){delete m[n]}o.disposeJSObjectReferenceById=R;class A{constructor(e,t){this._id=e,this._callDispatcher=t}invokeMethod(e,...t){return this._callDispatcher.invokeDotNetMethod(null,e,this._id,t)}invokeMethodAsync(e,...t){return this._callDispatcher.invokeDotNetMethodAsync(null,e,this._id,t)}dispose(){this._callDispatcher.invokeDotNetMethodAsync(null,"__Dispose",this._id,null).catch(t=>console.error(t))}serializeAsArg(){return{[l]:this._id}}}o.DotNetObject=A,F(function(e,t){if(t&&typeof t=="object"){if(t.hasOwnProperty(l))return new A(t[l],S);if(t.hasOwnProperty(c)){const r=t[c],i=m[r];if(i)return i.getWrappedObject();throw new Error(`JS object instance with Id '${r}' does not exist. It may have been disposed.`)}else if(t.hasOwnProperty(d)){const r=t[d],i=S.processByteArray(r);if(i===void 0)throw new Error(`Byte array index '${r}' does not exist.`);return i}else if(t.hasOwnProperty(j)){const r=t[j],i=S.getDotNetStreamPromise(r);return new G(i)}}return t});class G{constructor(e){this._streamPromise=e}stream(){return this._streamPromise}async arrayBuffer(){return new Response(await this.stream()).arrayBuffer()}}class E{constructor(){this.streamPromise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}function M(n,e){switch(e){case b.Default:return n;case b.JSObjectReference:return N(n);case b.JSStreamReference:return B(n);case b.JSVoidResult:return null;default:throw new Error(`Invalid JS call result type '${e}'.`)}}let D=0;function v(n,e){D=0,S=n;const t=JSON.stringify(e,Q);return S=void 0,t}function Q(n,e){if(e instanceof A)return e.serializeAsArg();if(e instanceof Uint8Array){S.getDotNetCallDispatcher().sendByteArray(D,e);const r={[d]:D};return D++,r}return e}}(u.DotNet||(u.DotNet={}));let p;p=u.DotNet.attachDispatcher({sendByteArray:P,beginInvokeDotNetFromJS:T,endInvokeJSFromDotNet:I});function P(o,s){const c=$(s);window.chrome.webview.postMessage(["ReceiveByteArrayFromJS",o,c])}function T(o,s,c,l,d){window.chrome.webview.postMessage(["beginInvokeDotNetFromJS",o?o.toString():null,s,c,l||0,d])}function I(o,s,c){window.chrome.webview.postMessage(["endInvokeJSFromDotNet",o?o.toString():null,s,c])}function $(o){const s=new Array(o.length);for(var c=0;c<o.length;c++)s[c]=String.fromCharCode(o[c]);return btoa(s.join(""))}function x(o){const s=atob(o),c=s.length,l=new Uint8Array(c);for(let d=0;d<c;d++)l[d]=s.charCodeAt(d);return l}window.chrome.webview.addEventListener("message",o=>{var s=JSON.parse(o.data);switch(s[0]){case"EndInvokeDotNet":{p.endInvokeDotNetFromJS(s[1],s[2],s[3]);break}case"BeginInvokeJS":{p.beginInvokeJSFromDotNet(s[1],s[2],s[3],s[4],s[5]);break}case"SendByteArrayToJS":{let c=s[1],l=s[2];const d=x(l);p.receiveByteArray(c,d);break}default:console.error(`不支持的消息类型${o.data}`)}}),window.DotNet=u.DotNet,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
